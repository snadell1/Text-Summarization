The main focus of this paper is the problem of how to deal with incomplete domains models.  As the paper suggests in the abstract a lot of work has been done is the area of learning completely unknown models, but the more realistic situation for an agent is the problem of how to refine and discover unknown model information from a partially defined world.  To do this the authors of this paper use plan traces to both refine the model and to create macro-action operators that allow for a more accurate plan generation.
     RIM, Refining Incomplete planning domain Models, is the proposed algorithm that operates in a STRIPS defined domain.  This means that each action has preconditions and effects that can add or delete propositions from the current state.  A planning problem is defined by an initial state and a set of goal propositions, and a successful solution is a list of actions that allow the agent to get from that initial state to the goal.  A planning problem is simply a tuple of objects, initial state, and goal propositions along with a successful plan that reaches that goal.  Lastly, a macro-action is a list of actions that can be executed in sequence to achieve a higher level goal.
     RIM approaches this problem by first extracting macro-operators from the plan traces and then it uses these learned macro-operators along with better defined actions to solve new problems in the same domain.  To extract important macros, RIM defines both macro frequency, as the number of occurrences seen in the trace, and macro strength, as the strength of the connection between successive actions.  It is important to consider both of these in the process because learning too many macros can be costly to execution.
     After the macro-operators are mined from the traces, the other goal of the algorithm is to better define the constraints of actions.  These unknown constraints come directly from the fact that the domain is incompletely defined and this can cause unexpected plan failure.  The approach taken by RIM is to use the MAX-SAT algorithm to learn the most likely complete description of actions in the domain.  To do this the algorithm executes the plan trace and along the way inserts incomplete states between actions that represent the possible preconditions and add and delete effects.  The algorithm observes that if predicates are frequently found before an action then it is likely those predicate are preconditions of that action.  Similarly, predicates that are found after that action or predicates that are removed after that action are likely hidden effects of that action.
     Now that the macro-operators are built and the action and model constraints are better defined the RIM algorithm takes this new information to solve new planning problems.  The RIM algorithm was compared against the ARMS algorithm in the blocks, driverlog, and depots domains.  Plan accuracy as a function of increasing plan traces was graphed.  The accuracy was calculated by using both approaches to solve 50 new planning problems.  As expected, for both algorithms, as the number of plan traces increased so did accuracy.  But, more interesting is that RIM outperformed ARMS in all three domains by a significant margin.
